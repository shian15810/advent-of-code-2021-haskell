name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint codebase
        uses: github/super-linter@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_EXCLUDE: .devcontainer

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Haskell
        uses: haskell/actions/setup@v1

      - name: Test examples
        run: |
          code=0
          for day in day-*/; do
            [ ! -d "$day" ] && continue
            received=$(runghc "$day/Main.hs" <"$day/example/input.txt")
            expected=$(cat "$day/example/output.txt")
            if [ "$received" != "$expected" ]; then
              echo Expected:
              echo "  ${expected//$'\n'/$'\n  '}"
              echo Received:
              echo "  ${received//$'\n'/$'\n  '}"
              code=1
              break
            fi
          done
          exit $code

      - name: Test puzzles
        run: |
          code=0
          for day in day-*/; do
            [ ! -d "$day" ] && continue
            received=$(runghc "$day/Main.hs" <"$day/puzzle/input.txt")
            expected=$(cat "$day/puzzle/output.txt")
            if [ "$received" != "$expected" ]; then
              echo Expected:
              echo "  ${expected//$'\n'/$'\n  '}"
              echo Received:
              echo "  ${received//$'\n'/$'\n  '}"
              code=1
              break
            fi
          done
          exit $code
